<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_StateMaint" Id="{37b42c71-d02c-4f0b-9d4a-8f4651b67341}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_StateMaint
VAR_IN_OUT
	stAxis  	: ARRAY [GVL.cXP .. GVL.cXM] OF ST_AxisGroup;
	bTopEntry	: BOOL;
END_VAR
VAR_INPUT
	eCommand			: E_Commands;
	stCalibrate			: ST_Calibrate;
	stChangeAxisEnable	: ST_ChangeAxisEnable;
	stChangeBrakeState	: ST_ChangeBrakeState;
	stClearAllFaults	: ST_ClearAllFaults;
	stClearAxisFaults	: ST_ClearAxisFaults;
	stDisableAllAxes	: ST_DisableAllAxes;
	stEnableAllAxes		: ST_EnableAllAxes;
	stGoToProd			: ST_GoToProd;
	stHomeAxis			: ST_HomeAxis;
	stMoveAxisAbsolute	: ST_MoveAxisAbsolute;
	stMoveAxisRelative	: ST_MoveAxisRelative;
END_VAR
VAR_OUTPUT
	stOutCalibDone		: ST_CalibDone;
	stOutError			: ST_Error;
	nSMState			: DINT;
END_VAR
VAR
	//state-machine
	eCurrentState	: E_StatesMaint;
	eNextState		: E_StatesMaint;
	fbCalibrating	: FB_StateCalibrating;
	fbMoving		: FB_StateMoving;
	fbStill			: FB_StateStill;
	bLowerEntry 	: BOOL;
	
	//Event
	bMotionDone		: BOOL;

	//other var
	eCopyCommand	: E_Commands;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
IF bTopEntry = TRUE THEN
	bTopEntry := FALSE;
	eNextState := E_StatesMaint.Still;
END_IF	
IF eCurrentState <> eNextState THEN
	bLowerEntry := TRUE;
END_IF
eCurrentState := eNextState;

//State Machine
CASE eCurrentState OF
	
	E_StatesMaint.Still:
		fbStill(
			stAxis				:= stAxis, 
			bTopEntry			:= bLowerEntry, 
			eCommand			:= eCommand,
			stChangeAxisEnable 	:= stChangeAxisEnable,
			stChangeBrakeState	:= stChangeBrakeState,
			stClearAllFaults	:= stClearAllFaults,
			stClearAxisFaults	:= stClearAxisFaults,
			stDisableAllAxes	:= stDisableAllAxes,
			stEnableAllAxes		:= stEnableAllAxes);
		IF eCommand <> E_Commands.noCommand THEN (*checks if there is a new command*)
			IF eCommand = E_Commands.calibrate AND (stAxis[GVL.cXP].bIsHomed AND stAxis[GVL.cXM].bIsHomed) THEN
				eNextState := E_StatesMaint.Calibrating;
			ELSIF eCommand = E_Commands.closeShutter OR_ELSE
				eCommand = E_Commands.goToCenter OR_ELSE
				eCommand = E_Commands.homeAxis OR_ELSE
				eCommand = E_Commands.jog OR_ELSE
				eCommand = E_Commands.moveAxisAbsolute OR_ELSE
				eCommand = E_Commands.moveAxisRelative THEN
					eNextState := E_StatesMaint.Moving;
					eCopyCommand := eCommand; (*need to copy since eCommand is only valid for 1 cycle. Resets to noCommand next cycle.*)
			END_IF
		END_IF
	
	E_StatesMaint.Calibrating:
		fbCalibrating(stAxis:=stAxis, bTopEntry:=bLowerEntry, stOutCalibDone=>stOutCalibDone);
		IF fbCalibrating.bCalibDone THEN
			eNextState := E_StatesMaint.Still;
		END_IF
		
	E_StatesMaint.Moving:
		fbMoving(
			stAxis			:= stAxis, 
			bTopEntry		:= bLowerEntry, 
			eCommand		:= eCopyCommand,
			bMotionDone		=>bMotionDone);
		IF bMotionDone THEN
			eNextState := E_StatesMaint.Still;
		END_IF
END_CASE

nSMState := eCurrentState;]]></ST>
    </Implementation>
    <LineIds Name="FB_StateMaint">
      <LineId Id="111" Count="2" />
      <LineId Id="236" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="68" Count="1" />
      <LineId Id="166" Count="0" />
      <LineId Id="165" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="163" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="277" Count="1" />
      <LineId Id="280" Count="0" />
      <LineId Id="279" Count="0" />
      <LineId Id="281" Count="4" />
      <LineId Id="347" Count="0" />
      <LineId Id="62" Count="2" />
      <LineId Id="142" Count="5" />
      <LineId Id="151" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="350" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="59" Count="2" />
      <LineId Id="35" Count="1" />
      <LineId Id="39" Count="0" />
      <LineId Id="286" Count="2" />
      <LineId Id="290" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="157" Count="1" />
      <LineId Id="32" Count="0" />
      <LineId Id="305" Count="0" />
      <LineId Id="215" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>