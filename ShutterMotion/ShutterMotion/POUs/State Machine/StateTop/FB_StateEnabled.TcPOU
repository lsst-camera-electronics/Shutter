<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="FB_StateEnabled" Id="{b94d2bdc-9aa0-4455-a0cd-476d7bce246d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_StateEnabled
VAR_IN_OUT
	stAxis  	: ARRAY [GVL.cXP .. GVL.cXM] OF ST_AxisGroup;
	bTopEntry	: BOOL;
END_VAR
VAR_INPUT
	eCommand			: E_Commands;
	stCalibrate			: ST_Calibrate;
	stChangeAxisEnable	: ST_ChangeAxisEnable;
	stChangeBrakeState	: ST_ChangeBrakeState;
	stClearAllFaults	: ST_ClearAllFaults;
	stClearAxisFaults	: ST_ClearAxisFaults;
	stCloseShutter		: ST_CloseShutter;
	stDisableAllAxes	: ST_DisableAllAxes;
	stEnableAllAxes		: ST_EnableAllAxes;
	stGoToProd			: ST_GoToProd;
	stHomeAxis			: ST_HomeAxis;
	stMoveAxisAbsolute	: ST_MoveAxisAbsolute;
	stMoveAxisRelative	: ST_MoveAxisRelative;
	stOpenShutter		: ST_OpenShutter;
	stReset				: ST_Reset;
	stTakeExposure		: ST_TakeExposure;
END_VAR
VAR_OUTPUT
	bCalibDone			: BOOL;
	bMotionDone			: BOOL;
	stOutCalibDone		: ST_CalibDone;
	stOutTimer			: ST_Timer;
	nSMState			: DINT;
END_VAR
VAR
	//state-machine
	eCurrentState	: E_StatesEnabled;
	eNextState		: E_StatesEnabled;
	fbMaint			: FB_StateMaint;
	fbProd			: FB_StateProd;
	bLowerEntry		: BOOL;
	
	//Event
	bIsCalibrated	: BOOL;
	bShutterReady	: BOOL;

	//Other var
	fbReset			: FB_Reset;
	bResetting		: BOOL;
	bResetEntry		: BOOL;
	bStopping		: BOOL;
	
	//Test Var
	a,b : int;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(**)
IF bTopEntry = TRUE THEN
	bTopEntry := FALSE;
	(*Check if shutter blade sets are calibrated. If not, then go to still, otherwise go to previous state*)
	IF stAxis[GVL.cXP].bIsCalibrated AND stAxis[GVL.cXM].bIsCalibrated THEN
		eNextState := eCurrentState;
	ELSE
		eNextState := E_StatesEnabled.Maint;
	END_IF
END_IF	

IF eCurrentState <> eNextState THEN
	bLowerEntry := TRUE;
END_IF
eCurrentState := eNextState;

(* State Machine *)
CASE eCurrentState OF
	
	E_StatesEnabled.Maint:
		fbMaint(
			//inputs
			stAxis 				:= stAxis, 
			bTopEntry 			:= bLowerEntry, 
			eCommand			:= eCommand,
			stCalibrate			:= stCalibrate,
			stChangeAxisEnable	:= stChangeAxisEnable,
			stChangeBrakeState	:= stChangeBrakeState,
			stClearAllFaults	:= stClearAllFaults,
			stClearAxisFaults	:= stClearAxisFaults,
			stDisableAllAxes	:= stDisableAllAxes,
			stEnableAllAxes		:= stEnableAllAxes,
			stGoToProd			:= stGoToProd,
			stHomeAxis			:= stHomeAxis,
			stMoveAxisAbsolute	:= stMoveAxisAbsolute,
			stMoveAxisRelative	:= stMoveAxisRelative,
			//outputs
			bCalibDone			=> bCalibDone,
			bMotionDone			=> bMotionDone,
			stOutCalibDone		=> stOutCalibDone,
			nSMState			=> nSMState);	
		IF bShutterReady AND eCommand = E_Commands.goToProd THEN
			eNextState := E_StatesEnabled.Prod;
		END_IF
		a:=a+1;
	
	E_StatesEnabled.Prod:
		fbProd(
			//inputs
			stAxis			:= stAxis, 
			bTopEntry 		:= bLowerEntry,
			eCommand		:= eCommand,
			fSpeed			:= stReset.speed,
			stOpenShutter	:= stOpenShutter,
			stCloseShutter	:= stCloseShutter,
			stTakeExposure	:= stTakeExposure,
			//outputs
			bMotionDone		=> bMotionDone,
			nSMState		=> nSMState,
			stOutTimer		=> stOutTimer);
	b:=b+1;	

END_CASE

//Reset routine
IF eCommand = E_Commands.reset THEN
	bResetting 	:= TRUE;
	bResetEntry	:= TRUE;
END_IF
IF bResetting THEN
	fbReset(stAxis:=stAxis, bResetEntry:=bResetEntry,bResetting:=bResetting,);
	eNextState := E_StatesEnabled.Maint;
	bLowerEntry := TRUE; //forces states in Maint to go to still state
END_IF


//bShutterReady
(*
bShutterReady := (stAxis[GVL.cXP].bBrake AND stAxis[GVL.cXM].bBrake) AND
	((stAxis[GVL.cXP].bLimitHome AND stAxis[GVL.cXM].bLimitDeployed) OR (stAxis[GVL.cXP].bLimitDeployed AND stAxis[GVL.cXM].bLimitHome)) AND
	(stAxis[GVL.cXP].bIsCalibrated AND stAxis[GVL.cXM].bIsCalibrated);
*)
//this is the temp bShutterReady. Delete once all keyance switches are installed///////////////////////////////////////////////////////////////////////////////////
bShutterReady := (stAxis[GVL.cXP].bBrake AND stAxis[GVL.cXM].bBrake) AND (stAxis[GVL.cXP].bIsCalibrated AND stAxis[GVL.cXM].bIsCalibrated) AND
	(
		((stAxis[GVL.cXP].axisRef.NcToPlc.ActPos<1) AND (stAxis[GVL.cXM].axisRef.NcToPlc.ActPos<1)) OR 
		((stAxis[GVL.cXP].axisRef.NcToPlc.ActPos>750) AND (stAxis[GVL.cXM].axisRef.NcToPlc.ActPos>750))
	);

]]></ST>
    </Implementation>
    <LineIds Name="FB_StateEnabled">
      <LineId Id="150" Count="0" />
      <LineId Id="130" Count="1" />
      <LineId Id="156" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="141" Count="0" />
      <LineId Id="144" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="133" Count="3" />
      <LineId Id="128" Count="0" />
      <LineId Id="472" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="290" Count="0" />
      <LineId Id="257" Count="0" />
      <LineId Id="412" Count="0" />
      <LineId Id="258" Count="0" />
      <LineId Id="260" Count="4" />
      <LineId Id="266" Count="5" />
      <LineId Id="568" Count="0" />
      <LineId Id="570" Count="0" />
      <LineId Id="291" Count="0" />
      <LineId Id="294" Count="0" />
      <LineId Id="300" Count="0" />
      <LineId Id="79" Count="1" />
      <LineId Id="481" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="353" Count="0" />
      <LineId Id="276" Count="0" />
      <LineId Id="500" Count="0" />
      <LineId Id="494" Count="0" />
      <LineId Id="277" Count="3" />
      <LineId Id="573" Count="0" />
      <LineId Id="355" Count="0" />
      <LineId Id="625" Count="0" />
      <LineId Id="482" Count="0" />
      <LineId Id="357" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="184" Count="2" />
      <LineId Id="498" Count="0" />
      <LineId Id="187" Count="4" />
      <LineId Id="196" Count="0" />
      <LineId Id="469" Count="0" />
      <LineId Id="183" Count="0" />
      <LineId Id="413" Count="0" />
      <LineId Id="483" Count="0" />
      <LineId Id="414" Count="1" />
      <LineId Id="493" Count="0" />
      <LineId Id="484" Count="0" />
      <LineId Id="487" Count="0" />
      <LineId Id="485" Count="0" />
      <LineId Id="501" Count="0" />
      <LineId Id="512" Count="0" />
      <LineId Id="514" Count="0" />
      <LineId Id="513" Count="0" />
      <LineId Id="490" Count="1" />
      <LineId Id="200" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>